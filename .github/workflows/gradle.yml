# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      with:
         gradle-version: '8.4'

    # Grant execute permissions to gradlew script
    - name: Grant execute permissions
      run: chmod +x gradlew

    # Install Edge browser
    - name: Install Edge and EdgeDriver
      uses: browser-actions/setup-edge@v1
      with:
        edge-version: 'stable'  # Puedes cambiar 'beta' a 'stable' si prefieres la versi√≥n estable

    - name: Print Edge version
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          echo "Edge version:"; powershell -Command "(Get-Item (Get-Command msedge).Source).VersionInfo.ProductVersion"
        else
          microsoft-edge --version
        fi
        

    #Verify edge version
    - name: Check Edge and EdgeDriver versions
      run: |
        microsoft-edge --version
        edgedriver --version

    # Run Gradle tests
    - name: Run Tests with Gradle
      run: ./gradlew test

    # Clear Gradle dependency cache
    - name: Clear dependency cache
      run: rm -rf ~/.gradle/caches


    # Install Gradle dependencies
    - name: Install dependencies
      run: ./gradlew dependencies


      # Run Gradle tests using the pre-built Docker image
    #- name: Run Tests with Gradle (Edge Docker)
     # run: docker pull selenium/edge-chromium:latest && docker run -d -p 4444:4444 selenium/edge-chromium:latest && ./gradlew test
